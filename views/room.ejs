<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <script>
    const ROOM_ID = "<%= roomId %>"
  </script>
  <script defer src="https://unpkg.com/peerjs@1.5.2/dist/peerjs.min.js"></script>
  <script src="/socket.io/socket.io.js" defer></script>
  <script src="script.js" defer></script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
  <link rel="stylesheet" href="/node_modules/codemirror/lib/codemirror.css">
  <script src="/node_modules/codemirror/lib/codemirror.js"></script>
  <script src="/node_modules/codemirror/mode/clike/clike.js"></script>
  <link rel="stylesheet" href="/node_modules/codemirror/theme/darcula.css">
  <script src="/node_modules/codemirror/addon/edit/closebrackets.js"></script>
  <script src="/node_modules/codemirror/mode/python/python.js"></script>
  <title>Document</title>
  <style>
    #video-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, 200px);
      grid-auto-rows: 200px;
    }
    
    video {
      width: 100%;
      height: 100%;
      object-fit: cover;
      background: #000;
    }
    
  </style>
</head>
<body>
  <div id="video-grid"></div>
  <div class="row m-3">
    <div class="col">
      <div class="d-flex justify-content-between mb-2 bg-dark rounded p-2">
        <div class="col-12 w-25">
          <label class="visually-hidden" for="inlineFormSelectPref">Preference</label>
          <select class="form-select" id="inlineFormSelectPref">
            <option selected>Choose...</option>
            <option value="Java">Java‚òï</option>
            <option value="Cpp">C++‚öô</option>
            <option value="Python">Pythonüêç</option>
          </select>
        </div>
        <div>
          <button type="button" class="btn btn-success">Code editor</button>
          <button type="button" id="run" class="btn btn-success"><i class="bi bi-play-fill"></i></button>
        </div>
      </div>
      <textarea type="text" id="editor" class="form-control" aria-label="First name"></textarea>
    </div>
    <div class="col d-flex flex-column rounded bg-dark px-4">
      <div class="h-50">
        <label for="Input" class="text-light mt-4 mb-2">Input</label>
        <textarea type="text" id="input" class="form-control h-75" aria-label="Last name"></textarea>
      </div>
      <div class="h-50">
        <label for="Outpu" class="text-light mb-2">Output</label>
        <textarea type="text" id="output" class="form-control h-75" aria-label="Last name"></textarea>
      </div>
    </div>
  </div>

</body>
<script>
  var editor = CodeMirror.fromTextArea(document.getElementById("editor"), {
    mode: "text/x-c++src",
    theme: "darcula",
    lineNumbers: true,
    autoCloseBrackets: true,
  })
  
  var width=window.innerWidth
  var input = document.getElementById("input")
  var output = document.getElementById("output")
  var run = document.getElementById("run")


  editor.setSize(0.7 * width, "500")
  var option = document.getElementById("inlineFormSelectPref")
  option.addEventListener("change", function () {
    if(option.value == "Java"){
      editor.setOption("mode", "text/x-java")
    }
    else if(option.value == "Python"){
      editor.setOption("mode", "text/x-python")
    }
    else{
      editor.setOption("mode", "text/x-c++src")
    }
  })
  var code;
  run.addEventListener("click", async ()=>{
    code={
      code: editor.getValue(),
      input: input.value,
      lang: option.value
    }
    var oData=await fetch("http://localhost:3000/compile",{
      method: "POST",
      headers:{
        "Content-Type": "application/json"
      },
      body:JSON.stringify(code)
    })
    var d = await oData.json()
    output.value = d.output;
  })
</script>

</html>